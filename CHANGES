version 4.0.1
Modified preader to work in parallel under Windows
Changed the complex optical dielectric to real if the imaginary components are 0
Changed the README to give much better information about Windows 10 installations
Modified the shebang on the preader and pdielec commands so that Windows recognises them
Modified the checkcsv command so that it ignores the number of processors

Version 4.0.0
Mie scattering
Excel spread sheet writing completed
Added an 'experiment' program for testing parts of the code without having to do an abinitio calculation.

Version 3.0.1
Added degeneracy checking
Added improved checking of output files, so that small changes due to numpy/mkl choice are ignored
Parallel version of PDielec and preader

Version 3.0.0
Fixed a bug in the way born charges were read in by the Crystal interface.
Added a Phonopy interface (only the VASP driver in Phonopy has been tested)
Added an internal table of masses to PDielec so that a consistent set of masses is used across all QM/MM programs

Version 2.0.1
Fixed a small error in the logic for printing to csv using -csv_ext
Modified the reading of Crystal14 ouput so that the NOECKART flag  in the output file is now ignored and overriden by the PDielec -noeckart flag
Added a -threshold command which allows the user to be more selective as to which modes are included in the absorption calculation

Version 2.0
Updated the code to be compatible with both Python 2 and Python 3
In the process of modifying all the print statement, prettified the output
Added a -h -help to print out the usage information
Added a -debug keyword to cut down on some of the output
Added a -csv_ext name flag.  Output is sent to 3 files instead of one
         name_command.csv, name_frequencies.csv and name_spectrum.csv
Added tests to check if any file name given on the command line actually exists or not
Propagated the debug state to any reader
Moved the creation of the Plotter object to early in the code
Used plotter methods print3x3 and printReals to perform printing of arrrays

The command.sh files in the Examples directories have all been modified so that they use the "python" command, not python2 or python3.  These files also all command line parameters to be passed to the executing PDielec command.  This means that
command.sh -plot absorption
will run the example command and a plot of the results will be created.



Version 1.3

Added interfaces to Abinit and Quantum Espresso

There is now a -program castep/vasp/qe etc option
It was getting too hard to think of a unique identifier for the output file!

There is a new, Na2(SO4)2 example which was important because it has very asymmetric born charge matrices.  

I have added an option to use Crystal's symmetrising algorithm, so provided 
the HESSFREQ.DAT and the BORN.DAT files are present and
the "-hessian crystal" option is used, the Crystal frequencies should now agree with Crystal14 output.

There is -eckart flag, which forces PDielec to project out the translational modes.  
The flag works for any package.  It also applies projection to the LO modes.

There is a -LO_cart flag which gives the LO directions in cartesian directions.
This is the same as Abinit, so I was able to test the output against Abinit output.

There are changes in the output, as I now force the mass weighted normal modes to be unitary. 
This improves the Crystal results, but it did change all the other interfaces too. 
The results should still agree to between 4 and 5 significant figures with the old results.

Version 1.2
Added interface to Crystal14
