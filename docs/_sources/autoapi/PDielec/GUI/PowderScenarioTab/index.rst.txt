PDielec.GUI.PowderScenarioTab
=============================

.. py:module:: PDielec.GUI.PowderScenarioTab

.. autoapi-nested-parse::

   PowderScenarioTab module.



Classes
-------

.. autoapisummary::

   PDielec.GUI.PowderScenarioTab.PowderScenarioTab


Module Contents
---------------

.. py:class:: PowderScenarioTab(parent, debug=False)

   Bases: :py:obj:`PDielec.GUI.ScenarioTab.ScenarioTab`


   A class for managing the Powder Scenario Tab.

   It inherits from :class:`~PDielec.GUI.ScenarioTab`, thus utilizing its layout and properties, 
   with additional features and settings pertinent to powder scenarios.

   Parameters
   ----------
   parent : QWidget
       The parent widget to attach to this scenario tab.
   debug : bool, optional
       If set to True, debug messages will be printed. Defaults to False.

   Attributes
   ----------
   scenarioType : str
       Defines the type of scenario as 'Powder'.
   settings : dict
       Dictionary holding various settings related to the scenario.
   methods : list
       List of available effective medium methods.
   shapes : list
       List of available particle shapes.
   materialNames : list
       List of available material names.
   materialDefined : bool
       Indicates whether the material is defined manually or not.
   direction : ndarray
       Array defining the unique direction for particle shape.
   depolarisation : ndarray (3x3)
       Array defining the depolarisation factors.
   scenarioIndex : any
       Index associated with the current scenario.
   refreshRequired : bool
       Indicates if UI refresh is required.
   calculationRequired : bool
       Indicates if recalculation is required due to parameter changes.
   reader : An dft output reader
       Used to read external data.
   realPermittivity : list
       List holding real parts of permittivity values.
   imagPermittivity : list
       List holding imaginary parts of permittivity values.
   absorptionCoefficient : list
       List to hold absorption coefficient values.
   molarAbsorptionCoefficient : list
       List to hold molar absorption coefficient values.
   sp_atr : list
       List to hold ATR specific calculation results.

   Methods
   -------
   crystal_density()
       Compute and return the density of the crystal based on its volume and mass.
   openDB_button_clicked()
       Handler for the event where the database open button is clicked.
   on_h_sb_changed(value)
       Handler for changes in the 'h' dimension parameter of the crystal's unique direction.
   on_k_sb_changed(value)
       Handler for changes in the 'k' dimension parameter of the crystal's unique direction.
   on_l_sb_changed(value)
       Handler for changes in the 'l' dimension parameter of the crystal's unique direction.
   on_shape_cb_activated(index)
       Handler for changes in the selected shape of powder particles.
   on_methods_cb_activated(index)
       Handler to deal with changes in the selected calculation method for effective medium theory.
   on_mf_sb_changed(value)
       Handler for changes to the mass fraction value, updating the volume fraction value accordingly.
   update_vf_sb()
       Update the volume fraction spinbox according to the mass fraction and recalculates as necessary.
   on_aoverb_sb_changed(value)
       Handler for changes to the ellipsoid a/b ratio or eccentricity.
   on_legend_le_changed(text)
       Handler for changes to the legend label of the powder scenario.
   on_sigma_sb_changed(value)
       Handler for changes to the particle size distribution sigma.
   on_size_sb_changed(value)
       Handler for changes to the particle size.
   on_vf_sb_changed(value)
       Handle changes to the volume fraction spinbox, updating mass fraction accordingly.
   update_mf_sb()
       Update the mass fraction spinbox according to the volume fraction and recalculates as necessary.
   on_matrix_cb_activated(index)
       Handler for changes to the selected support matrix in the ComboBox.
   on_density_sb_changed(value)
       Handle changes to the density spinbox of the support matrix.
   on_bubble_vf_sb_changed(value)
       Handle changes to the bubble volume fraction spinbox.
   on_bubble_radius_sb_changed(value)
       Handle changes to the bubble radius spinbox.
   on_permittivity_i_sb_changed(value)
       Handle changes to the imaginary part of the support matrix permittivity.
   on_permittivity_r_sb_changed(value)
       Handle changes to the real part of the support matrix permittivity.
   on_atr_index_sb_changed(value)
       Handle changes to the ATR material refractive index spinbox.
   on_atr_incident_ang_sb_changed(value)
       Handle changes to the ATR incident angle spinbox.
   on_atr_spolfrac_sb_changed(value)
       Handle changes to the ATR s-polarisation fraction spinbox.
   change_greyed_out()
       Enable or disable elements of the GUI based on the current scenario settings.
   calculate(vs_cm1)
       Calculate the powder absorption for the given frequency range.
   get_result(vs_cm1, plot_type)
       Return the calculation result for the specified plot type.
   get_results(vs_cm1)
       Prepare the necessary results for displaying or processing.
   refresh(force=False)
       Refresh the GUI interface with up to date values.



   .. py:method:: calculate(vs_cm1)

      Calculate the powder absorption for the range of frequencies in vs_cm1.

      Parameters
      ----------
      vs_cm1 : array_like
          Array of frequencies for which to calculate the powder absorption.

      Returns
      -------
      array_like
          The calculated powder absorption for the given range of frequencies.




   .. py:method:: change_greyed_out()

      Modify UI elements based on the selected effective medium method.

      This function updates the enabled status of UI elements such as size, sigma, and shape selection based on the currently selected effective medium method in the settings. It also updates the particle shape setting if necessary and adjusts the UI to reflect any changes.

      Parameters
      ----------
      None

      Returns
      -------
      int

      Notes
      -----
      - The method checks the 'Effective medium method' and 'Particle shape' in the settings.
      - For 'Mie' and 'Anisotropic-Mie' methods, it enables size and sigma spinboxes and sets the particle shape to 'Sphere', disabling all other shapes.
      - For 'Averaged Permittivity', it disables size and sigma spinboxes and sets the particle shape to 'Sphere'.
      - For 'Maxwell-Garnett' and 'Bruggeman', it enables the size spinbox and disables the sigma spinbox, allowing all shapes to be selected.
      - If the particle shape is set to 'Ellipsoid', 'Plate', or 'Needle', it enables direction (h, k, l) spinboxes and adjusts the display label accordingly. For 'Sphere', it disables these spinboxes.




   .. py:method:: crystal_density()

      Find the crystal density from the current reader and return the density.

      Returns
      -------
      float
          The crystal density.




   .. py:method:: get_result(vs_cm1, plot_type)

      Return a result for plotting.

      Parameters
      ----------
      vs_cm1 : list
          A list of frequencies in cm-1
      plot_type : str
          A string indicating the type of result to return.
          One of: 'Powder Molar Absorption', 'Powder Absorption', 'Powder Real Permittivity', 'Powder Imaginary Permittivity', 'Powder ATR'

      Returns
      -------
      list
          A list of the required results.




   .. py:method:: get_results(vs_cm1)

      Return the results of the effective medium theory calculation.

      This routine jut causes a refresh and calculation if it is needed.
      See get_result() for accessing the results themselves

      Parameters
      ----------
      vs_cm1 : list
          A list of frequencies in cm-1

      Returns
      -------
      None




   .. py:method:: on_aoverb_sb_changed(value)

      Handle a change to the a/b ratio for an ellipsoid.

      Parameters
      ----------
      value : float
          The a/b ratio of the elllipsoid




   .. py:method:: on_atr_incident_ang_sb_changed(value)

      Handle the update to the ATR incident angle situation.

      This method updates the ATR incident angle setting based on user inputs or changes. It also triggers an update to ensure the new settings are reflected across the application.

      Parameters
      ----------
      value : float or int
          The new value for the ATR incident angle.

      Returns
      -------
      int




   .. py:method:: on_atr_index_sb_changed(value)

      Handle the change in settings for ATR material refractive index.

      Parameters
      ----------
      value : float
          The new value for the ATR material refractive index.

      Returns
      -------
      int

      Notes
      -----
      - This function updates the 'ATR material refractive index' in the settings dictionary.
      - Marks the instance as requiring a refresh, possibly to update some UI elements or calculations.




   .. py:method:: on_atr_spolfrac_sb_changed(value)

      Update the ATR S polarisation fraction setting and request a refresh as required.

      Parameters
      ----------
      value : float
          The new value for the ATR S polarisation fraction. 

      Returns
      -------
      int

      Notes
      -----
      - This function updates the settings dictionary on the `self` object with the new value for the key 'ATR S polarisation fraction'.
      - The refresh flag `self.refreshRequired` is set to `True` to indicate that some action is needed to reflect the change in the application.




   .. py:method:: on_bubble_radius_sb_changed(value)

      Update the bubble radius setting and mark refresh as required.

      This method updates the 'Bubble radius' in the settings dictionary and marks the instance for refresh.

      Parameters
      ----------
      value : float 
          The new value to update the bubble radius setting with.

      Returns
      -------
      int




   .. py:method:: on_bubble_vf_sb_changed(value)

      Handle a change to the bubble volume fraction.

      A change in the bubble volume fraction causes changes in the volume and mass fractions
      These are calculated according to the mass or volume fraction having priority and the spinboxed updated.
      A refresh is forced

      Parameters
      ----------
      value : float
          The bubble volume fraction




   .. py:method:: on_density_sb_changed(value)

      Handle a change to the matrix density.

      Changes in density cause changes in the volume and mass fractions.  
      These are calculated according to the mass or volume fraction having priority and the spinboxed updated.
      A refresh is forced

      Parameters
      ----------
      value : float
          The density




   .. py:method:: on_h_sb_changed(value)

      Handle a change to the h parameter of the (hkl) surface.

      Parameters
      ----------
      value : int
          The h, k or l value




   .. py:method:: on_k_sb_changed(value)

      Handle a change to the k parameter of the (hkl) surface.

      Parameters
      ----------
      value : int
          The h, k or l value




   .. py:method:: on_l_sb_changed(value)

      Handle a change to the l parameter of the (hkl) surface.

      Parameters
      ----------
      value : int
          The h, k or l value




   .. py:method:: on_legend_le_changed(text)

      Handle a legend change.

      Parameters
      ----------
      text : str
          The legend




   .. py:method:: on_matrix_cb_activated(index)

      Handle a change to the support matrix supplied by the materials' database.

      A refresh is flagged and the matrix name set from the combobox.
      QT signals are blocked while data is being updated.
      A material object is defined on the basis of the matrix name and the database
      A refresh is performed

      Parameters
      ----------
      index : int
          The index is not used but the associated text of the combobox is.

      Returns
      -------
      None




   .. py:method:: on_methods_cb_activated(index)

      Handle changes in the calculation method for the effective medium theory.

      Parameters
      ----------
      index
          The index in the list of methods




   .. py:method:: on_mf_sb_changed(value)

      Handle a mass fraction change and update the volume fraction.

      The mass fraction is prioritized and stored.  The volume fraction is calculated.

      Parameters
      ----------
      value : float
          The mass fraction




   .. py:method:: on_permittivity_i_sb_changed(value)

      Update the imaginary part of the permittivity in the matrix material settings and trigger a refresh.

      Parameters
      ----------
      value : float
          The new imaginary part of the permittivity to be set.

      Returns
      -------
      int

      Notes
      -----
      - Updates the imaginary part of the `Matrix permittivity` in the settings dictionary with the new value, keeping the real part unchanged.
      - Replaces the permittivity object of the matrix material with a new constant scalar permittivity object created using the updated `Matrix permittivity`.
      - Marks the matrix material as manually defined and triggers a required refresh to update any dependent calculations or displays.




   .. py:method:: on_permittivity_r_sb_changed(value)

      Update the real part of the permittivity in the matrix material settings and refresh the material definition.

      Parameters
      ----------
      value : float
          The new real value of the matrix permittivity to be set.

      Returns
      -------
      int




   .. py:method:: on_shape_cb_activated(index)

      Handle changes to the shape of the powder particles.

      Parameters
      ----------
      index
          The index in the list of shapes




   .. py:method:: on_sigma_sb_changed(value)

      Handle a particle size distribution change.

      Parameters
      ----------
      value : float
          The particle size distribution width in microns




   .. py:method:: on_size_sb_changed(value)

      Handle a particle size change.

      Parameters
      ----------
      value : float
          The particle size in microns




   .. py:method:: on_vf_sb_changed(value)

      Handle a volume fraction change, alter the mass fraction accordingly.

      Parameters
      ----------
      value : float
          The volume fraction




   .. py:method:: openDB_button_clicked()

      Open a new materials' database.

      Returns
      -------
      None




   .. py:method:: refresh(force=False)

      Refresh the GUI interface with up to date values.

      Parameters
      ----------
      force : bool
          If True, then a refresh is forced regardless of the state of the scenario.

      Returns
      -------
      None




   .. py:method:: update_mf_sb()

      Update the mass fraction and according to the volume fraction.

      Parameters
      ----------
      None




   .. py:method:: update_vf_sb()

      Update the volume fraction according to the mass fraction.

      Parameters
      ----------
      None




   .. py:attribute:: absorptionCoefficient
      :value: []



   .. py:attribute:: aoverb_sb


   .. py:attribute:: atr_incident_ang_sb


   .. py:attribute:: atr_index_sb


   .. py:attribute:: atr_spolfrac_sb


   .. py:attribute:: bubble_radius_sb


   .. py:attribute:: bubble_vf_sb


   .. py:attribute:: calculationRequired
      :value: False



   .. py:attribute:: density_sb


   .. py:attribute:: depolarisation


   .. py:attribute:: direction


   .. py:attribute:: h_sb


   .. py:attribute:: hkl_label


   .. py:attribute:: imagPermittivity
      :value: []



   .. py:attribute:: k_sb


   .. py:attribute:: l_sb


   .. py:attribute:: legend_le


   .. py:attribute:: materialDefinedManually
      :value: False



   .. py:attribute:: materialNames
      :value: []



   .. py:attribute:: matrixPermittivityFunction


   .. py:attribute:: matrix_cb


   .. py:attribute:: matrix_info_le


   .. py:attribute:: methods
      :value: ['Maxwell-Garnett', 'Bruggeman', 'Averaged Permittivity', 'Mie']



   .. py:attribute:: methods_cb


   .. py:attribute:: mf_sb


   .. py:attribute:: molarAbsorptionCoefficient
      :value: []



   .. py:attribute:: noCalculationsRequired
      :value: 1



   .. py:attribute:: permittivity_i_sb


   .. py:attribute:: permittivity_r_sb


   .. py:attribute:: reader
      :value: None



   .. py:attribute:: realPermittivity
      :value: []



   .. py:attribute:: refreshRequired
      :value: True



   .. py:attribute:: scenarioIndex
      :value: None



   .. py:attribute:: scenarioType
      :value: 'Powder'



   .. py:attribute:: shape_cb


   .. py:attribute:: shapes
      :value: ['Sphere', 'Needle', 'Plate', 'Ellipsoid']



   .. py:attribute:: sigma_sb


   .. py:attribute:: size_sb


   .. py:attribute:: sp_atr
      :value: []



   .. py:attribute:: vf_sb


