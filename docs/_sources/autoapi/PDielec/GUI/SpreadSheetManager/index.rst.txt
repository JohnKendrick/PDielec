PDielec.GUI.SpreadSheetManager
==============================

.. py:module:: PDielec.GUI.SpreadSheetManager

.. autoapi-nested-parse::

   SpreadSheetMamager module



Classes
-------

.. autoapisummary::

   PDielec.GUI.SpreadSheetManager.SpreadSheetManager


Module Contents
---------------

.. py:class:: SpreadSheetManager(filename)

   A manager for handling operations on an Excel workbook via xlsxwriter.

   This class provides methods for managing a workbook with various tabs
   (named worksheets), writing data to these worksheets, and handling complex
   data types specifically tailored for scientific or engineering applications.

   Parameters
   ----------
   filename : str
       The name of the file to which the workbook will be saved.

   Attributes
   ----------
   workbook : Workbook
       The workbook object from xlsxwriter this manager operates on.
   closed : bool
       Boolean flag indicating whether the workbook has been closed.
   tab_names : list of str
       A list containing the names of the tabs (worksheets) to be managed.
   worksheets : dict
       A dictionary mapping tab names to worksheet objects.
   positions : dict
       A dictionary mapping tab names to their current write position (row, column).
   max_col : dict
       A dictionary mapping tab names to the maximum column index used.
   max_row : dict
       A dictionary mapping tab names to the maximum row index used.
   opened : dict
       A dictionary indicating whether a tab (worksheet) has been opened for writing.
   name : str
       The name of the currently selected work tab.

   Methods
   -------
   openWorkSheet(tab)
       Opens a new worksheet for the given tab if not already opened.
   selectWorkSheet(name)
       Selects the specified worksheet for further operations.
   writeNextRow(items, row=None, col=None, check='')
       Writes a series of items to the next row of the currently selected worksheet.
   write(row, col, item)
       Writes an item to the specified location in the currently selected worksheet.
   delete()
       Deletes all content from the currently selected worksheet.
   close()
       Closes the workbook, finalizing it for output.


   .. py:method:: close()

      Close the workbook if it hasn't been closed already.

      Closes the workbook associated with an instance and sets its status as closed to prevent multiple close operations.

      Parameters
      ----------
      None

      Returns
      -------
      None



   .. py:method:: delete()

      Delete all the data in the current worksheet.

      Clears all entries in the worksheet represented by `self` by setting each cell's value to an empty string.
      After clearing the data, it resets the current position, maximum column, and maximum row counters for the worksheet.

      Parameters
      ----------
      None

      Returns
      -------
      None




   .. py:method:: openWorkSheet(tab)

      Open a new worksheet in a workbook.

      Parameters
      ----------
      tab : str
          The name of the worksheet to be opened.

      Returns
      -------
      None

      Notes
      -----
      If the worksheet identified by `tab` is already opened, this method does nothing. 
      Otherwise, it creates a new worksheet with the name `tab`, initializes its position, 
      maximum column, maximum row, and marks it as opened within the workbook data structures 
      handled by the instance. 



   .. py:method:: selectWorkSheet(name)

      Selects or opens a worksheet by name.

      Parameters
      ----------
      name : str
          The name of the worksheet to select or open.

      Returns
      -------
      None

      Notes
      -----
      This method selects a worksheet if it is already opened. If the worksheet is not
      currently open, it attempts to open the worksheet by calling `openWorkSheet` with
      the worksheet name.



   .. py:method:: write(row, col, item)

      Writes an item to a specific position in the active worksheet, handling complex numbers.

      Parameters
      ----------
      row : int
          The row index where the item will be written.
      col : int
          The column index where the item will be written.
      item : int, float, complex, str
          The item to be written to the worksheet. If the item is a complex number,
          its real and imaginary parts are written to adjacent columns.

      Returns
      -------
      None

      Notes
      -----
      - This method updates the worksheet's max column and row based on the provided indices.
      - When writing a complex number, `col` is incremented before writing the imaginary part,
        and the updated column is used for adjusting the max column.
      - Updates the `positions` attribute with the next available position in the worksheet.




   .. py:method:: writeNextRow(items, row=None, col=None, check='')

      Writes a sequence of items as a row in a spread sheet, starting from a specified row and column into a grid structure.

      Parameters
      ----------
      items : list
          A list of items to be written. Items can be strings, numbers, or nested lists where each sub-item is written in subsequent columns.
      row : int, optional
          The row index to start writing from. If not specified, uses the current row position of the object.
      col : int, optional
          The column index to start writing from. If not specified, uses the current column position of the object.
      check : str, optional
          A check string written to the beginning of the row specified. Defaults to an empty string if not specified.

      Returns
      -------
      None

      Notes
      -----
      - If `col` is 0, a warning message is printed.
      - The `row` and `col` are updated as items are written, and `row` is incremented after writing all items.
      - For items that are lists, each element is written in subsequent columns. This is applied recursively for nested lists.
      - `self.positions` is a dictionary holding the current positions (row, column) for different names, and `self.name` accesses the current object's name.



