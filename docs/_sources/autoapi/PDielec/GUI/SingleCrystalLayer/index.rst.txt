PDielec.GUI.SingleCrystalLayer
==============================

.. py:module:: PDielec.GUI.SingleCrystalLayer

.. autoapi-nested-parse::

   SingleCrystalLayer module.



Classes
-------

.. autoapisummary::

   PDielec.GUI.SingleCrystalLayer.ShowLayerWindow
   PDielec.GUI.SingleCrystalLayer.SingleCrystalLayer


Module Contents
---------------

.. py:class:: ShowLayerWindow(layer, message='', parent=None, debug=False)

   Bases: :py:obj:`qtpy.QtWidgets.QDialog`


   A GUI window for displaying and editing the properties of a layer in a project.

   Parameters
   ----------
   layer : object
       The layer object to be displayed or acted upon in the window. (see :class:`SingleCrystalLayer`)
   message : str, optional
       Custom message to display in the window. The default is an empty string.
   parent : QWidget, optional
       The parent widget of this window. The default is None.
   debug : bool, optional
       Flag to enable or disable debug mode. The default is False.

   Attributes
   ----------
   layer : object
       The :class:`SingleCrystalLayer` instance that is displayed or being edited in this window.
   message : str
       The message displayed at the top of the window.
   layout : QVBoxLayout
       The main layout of the window.
   buttonBox : QDialogButtonBox
       The dialog box containing Ok and Cancel buttons.

   Methods
   -------
   getLayer()
       Return the :class:`SingleCrystalLayer` instance being edited or displayed.
   drawLayerWidget()
       Create a QWidget displaying all information about the layer.
   drawLayerWidgetLine1()
       Add widgets to display the first line of layer properties.
   drawLayerWidgetLine2()
       Add widgets to display the second line of layer properties related to the crystallographic direction (hkl).
   drawLayerWidgetLine3()
       Add widgets for displaying the third line of layer properties related to lab frame information.
   changeLabFrameInfo()
       Update the displayed lab frame information based on the layer's current state.
   on_film_thickness_sb_changed(value)
       Respond to changes in the film thickness spin box.
   on_azimuthal_angle_sb_changed(value)
       Respond to changes in the azimuthal angle spin box.
   on_hkl_sb_changed(value, hkorl)
       Respond to changes in the h, k, or l spin boxes.
   on_thickness_units_cb_activated(index)
       Respond to thickness unit selection changes.



   .. py:method:: changeLabFrameInfo()

      Update the lab frame information in the labframe widget.

      Shows a, b and c crystal axis in the labframe.

      Parameters
      ----------
      None

      Returns
      -------
      None




   .. py:method:: drawLayerWidget()

      Create a layer widget showing all the information about the layer.

      Parameters
      ----------
      None

      Returns
      -------
      None




   .. py:method:: drawLayerWidgetLine1()

      Add the first line of the layer description.

      Shows the material name and the film thickness and units. 

      Parameters
      ----------
      None

      Returns
      -------
      None




   .. py:method:: drawLayerWidgetLine2()

      Add the second line of the layer description.

      Shows the hkl specification and the azimuthal angle

      Parameters
      ----------
      None

      Returns
      -------
      None




   .. py:method:: drawLayerWidgetLine3()

      Add the third line of the layer description.

      Shows the relationship between crystal and labframe coordinate systems

      Parameters
      ----------
      None

      Returns
      -------
      None




   .. py:method:: getLayer()

      Return the edited layer.

      Parameters
      ----------
      None

      Returns
      -------
      self.layer : An instance of a single crystal layer




   .. py:method:: on_azimuthal_angle_sb_changed(value)

      Handle azimuthal spin box change.

      Parameters
      ----------
      value : float
          The new azimuthal angle in degrees

      Returns
      -------
      None




   .. py:method:: on_film_thickness_sb_changed(value)

      Handle film thickness spin box change.

      Parameters
      ----------
      value : float
          The new thickness

      Returns
      -------
      None




   .. py:method:: on_hkl_sb_changed(value, hkorl)

      Handle h, k, or l change.

      Parameters
      ----------
      value : int
         The value of h, k or l
      hkorl : int
          0, 1, or 2 for h, k or l respectively.

      Returns
      -------
      None




   .. py:method:: on_thickness_units_cb_activated(index)

      Handle activation of thickness units combobox.

      Parameters
      ----------
      index : int
          The index of the selected item in the combobox.
          One of 'nm', 'um', 'mm', 'cm'

      Returns
      -------
      None




   .. py:attribute:: buttonBox


   .. py:attribute:: layer


   .. py:attribute:: layout


   .. py:attribute:: message
      :value: ''



.. py:class:: SingleCrystalLayer(material, hkl=None, azimuthal=0.0, thickness=0.0, thicknessUnit='nm', incoherentOption='Coherent', dielectricFlag=False)

   A class representing a single crystal layer.

   Parameters
   ----------
   material : Material
       An instance of Material object (see :class:`~PDielec.Materials.Material`), which contains:
         - name (str)
         - density (float)
         - permittivity (float)
         - unit cell (UnitCell)
   hkl : list of int
       A list of 3 integers defining the plane of interest.
   azimuthal : float
       The azimuthal angle of rotation of the crystal about the z-axis.
   thickness : float
       The thickness of the layer in the specified thickness units.
   thicknessUnits : {'ang','nm', 'um', 'mm', 'cm'}
       The units of thickness measurement.
   incoherentOption : {'Coherent', 'Incoherent (intensity)', 'Incoherent (phase cancelling)', 'Incoherent (phase averaging)', 'Incoherent non-reflective'}
       The option for handling incoherent scattering. 
   dielectricFlag : bool
       True if the layer material is the dielectric being studied (ie it was read in as a DFT calculation), False otherwise.

   Attributes
   ----------
   material : Material
       The material of the layer. (See :class:`~PDielec.Materials.Material`)
   hkl : list of int
       The Miller indices of the plane of interest in the crystal.
   incoherentOption : str
       The incoherent option for the layer.
   azimuthal : float
       The azimuthal angle of rotation of the crystal about the z-axis, in degrees.
   thickness : float
       The thickness of the layer in the specified units.
   thicknessUnit : str
       The units used for the thickness measurement.
   dielectricFlag : bool
       A flag indicating if the layer material is the dielectric material.
   euler : ndarray
       The Euler rotation matrix for the crystal to laboratory frame transformation, stored as a 3x3 numpy array with `dtype=np.longdouble`.
   euler_inverse : ndarray
       The inverse of the Euler rotation matrix, stored as a 3x3 numpy array with `dtype=np.longdouble`.
   labframe_w : 
       Placeholder attribute for GUI interactions, not initialized within the class definition.
   labframe : ndarray
       The lattice vectors of the crystal in the laboratory frame, stored as a numpy array.
   phaseShift : float
       The phase shift for the layer.

   Methods
   -------
   print()
       Prints the main attributes of the layer.
   getPhaseShift()
       Returns the phase shift for the layer.
   setPhaseShift(phaseShift)
       Sets the phase shift for the layer.
   setAzimuthal(angle)
       Sets the azimuthal angle of the layer and recalculates the Euler matrix.
   isCoherent()
       Returns True if the layer is coherent, False otherwise.
   getIncoherentOption()
       Returns the incoherent interaction option for the layer.
   setIncoherentOption(option)
       Sets the incoherent interaction option for the layer.
   getAzimuthal()
       Returns the azimuthal angle.
   setThickness(thickness)
       Sets the thickness of the layer.
   getThickness()
       Returns the thickness of the layer.
   getThicknessInMetres()
       Converts and returns the thickness of the layer in meters.
   setThicknessUnit(thicknessUnit)
       Sets the unit of thickness measurement.
   getThicknessUnit()
       Returns the unit of thickness measurement.
   setHKL(hkl)
       Sets the Miller indices for the plane of interest in the crystal.
   getHKL()
       Returns the Miller indices of the plane of interest.
   getName()
       Returns the name of the material.
   getMaterial()
       Returns the material object associated with the layer.
   getPermittivityFunction()
       Returns the permittivity tensor for the crystal at the surface and azimuthal angle specified.
   isTensor()
       Returns True if the material of the layer is a tensor material, False otherwise.
   isScalar()
       Returns True if the material of the layer is a scalar material, False otherwise.
   isDielectric()
       Returns True if the material of the layer is the dielectric being studied.
   calculate_euler_matrix()
       Calculates the Euler angles for the crystal to lab frame transformation.
   azimuthalRotationMatrix(angle)
       Calculates a rotation matrix for the azimuthal angle.
   changeLabFrameInfo()
       Changes the Lab Frame Information, used with GUI interactions.
   getLabFrame()
       Returns the information of the crystal axes in the laboratory frame.
   calculateLabFrameEpsilon(v)
       Computes the permittivity tensor for the material at a given frequency and transforms it to the laboratory frame.
   invert(m)
       Calculates the inverse of a given 3x3 complex matrix.

   Notes
   -----
   The class heavily relies on numpy for various calculations including matrix manipulations and rotation calculations.



   .. py:method:: azimuthalRotationMatrix(angle)

      Calculate a rotation matrix for the azimuthal angle (in degrees).

      Parameters
      ----------
      angle : float
          The azimuthal angle in degrees

      Returns
      -------
      ndarray 3x3
          The rotation matrix for the given azimuthal angle.




   .. py:method:: calculateLabFrameEpsilon(v)

      Get the permittivity for this material at frequency v and transform it to the laboratory frame.

      Parameters
      ----------
      v : float
          Frequency at which the permittivity is evaluated.

      Returns
      -------
      float
          The permittivity of the material in the laboratory frame.




   .. py:method:: calculate_euler_matrix()

      Calculate the Euler angles for the crystal to lab transformation.

      Parameters
      ----------
      None

      Returns
      -------
      None




   .. py:method:: changeLabFrameInfo()

      Change the Lab Frame Info panel.

      Information about the relationship between the crystal and labframe coordinate systems is presented.



   .. py:method:: getAzimuthal()

      Get the azimuthal angle.

      Parameters
      ----------
      None

      Returns
      -------
      float
          The azimuthal angle.




   .. py:method:: getHKL()

      Get the hkl.

      Parameters
      ----------
      None

      Returns
      -------
      list of 3 ints




   .. py:method:: getIncoherentOption()

      Return the value of the incoherent option attribute.

      This will return 'Coherent' for a coherent layer

      Parameters
      ----------
      None

      Returns
      -------
      type
          The value of the `incoherentOption` attribute of the object.




   .. py:method:: getLabFrame()

      Return the a, b, and c cell axes in the laboratory frame coordinates.

      Parameters
      ----------
      None

      Returns
      -------
      (a, b, c) : 3 lists of floats each with 3 elements
          - a, The a cell axis in the laboratory frame.
          - b, The b cell axis in the laboratory frame.
          - c, The c cell axis in the laboratory frame.




   .. py:method:: getMaterial()

      Return the material.

      Parameters
      ----------
      None

      Returns
      -------
      an instance of a Materials object




   .. py:method:: getName()

      Return the material name.

      Parameters
      ----------
      None

      Returns
      -------
      str
          The name of the material.




   .. py:method:: getPermittivityFunction()

      Return the permittivity function associated with this material.

      Parameters
      ----------
      None

      Returns
      -------
      A permittivity function




   .. py:method:: getPhaseShift()

      Get the phase shift for the layer.

      Parameters
      ----------
      None

      Returns
      -------
      float
          The phase shift used in the averaged phase shift method




   .. py:method:: getThickness()

      Get the thickness.

      Parameters
      ----------
      None

      Returns
      -------
      float




   .. py:method:: getThicknessInMetres()

      Get the thickness in metres.

      Parameters
      ----------
      None

      Returns
      -------
      float




   .. py:method:: getThicknessUnit()

      Get the thickness unit.

      Parameters
      ----------
      None

      Returns
      -------
      str




   .. py:method:: invert(m)

      Calculate the inverse of m.

      Parameters
      ----------
      m : complex 3x3 array
          The input matrix for which to calculate the inverse.

      Returns
      -------
      numpy.ndarray
          The inverse of `m` as a 3x3 complex numpy array.




   .. py:method:: isCoherent()

      Return True if this is a coherent layer, False otherwise.

      Parameters
      ----------
      None

      Returns
      -------
      bool
          True if this is a coherent layer, False otherwise.




   .. py:method:: isDielectric()

      Return true if the material of the layer is the dielectric material.

      Parameters
      ----------
      None

      Returns
      -------
      bool
          True if the material of the layer is the dielectric material, otherwise False.




   .. py:method:: isScalar()

      Return true if the material of the layer is a scalar material.

      Parameters
      ----------
      None

      Returns
      -------
      bool
          True if the material of the layer is a scalar material, False otherwise.




   .. py:method:: isTensor()

      Return true if the material of the layer is a tensor material.

      Parameters
      ----------
      None

      Returns
      -------
      bool
          True if the material of the layer is a tensor material, False otherwise.




   .. py:method:: print()

      Print the main attributes of the layer.

      Parameters
      ----------
      None




   .. py:method:: setAzimuthal(angle)

      Set the azimuthal angle of the layer and calculate the Euler matrix.

      Parameters
      ----------
      angle : float
         The azimuthal angle in degrees

      Returns
      -------
      None




   .. py:method:: setHKL(hkl)

      Set the hkl and recalculate the Euler matrix.

      Parameters
      ----------
      hkl : list of 3 ints
         The hkl parameters of the surface

      Returns
      -------
      None




   .. py:method:: setIncoherentOption(option)

      Set the incoherent option.

      Parameters
      ----------
      option : string
          Sets the incoherent option.  Can be one of;
          - "Coherent"
          - "Incoherent (intensity)"
          - "Incoherent (phase averaging)"
          - "Incoherent (phase cancelling)"
          - "Incoherent (non-reflective)"

      Returns
      -------
      None




   .. py:method:: setPhaseShift(phaseShift)

      Set the phase shift for the layer.

      Parameters
      ----------
      phaseShift : float
         The phase shift

      Returns
      -------
      None




   .. py:method:: setThickness(thickness)

      Set the thickness.

      Parameters
      ----------
      thickness : float
          The value of the layer thickness in the current thickness units

      Returns
      -------
      None




   .. py:method:: setThicknessUnit(thicknessUnit)

      Set the thickness unit.

      Parameters
      ----------
      thicknessUnit : str
          The unit of thickness. Can be one of "ang", "nm", "um", "mm", or "cm"

      Returns
      -------
      None




   .. py:attribute:: azimuthal
      :value: 0.0



   .. py:attribute:: dielectricFlag
      :value: False



   .. py:attribute:: euler


   .. py:attribute:: euler_inverse


   .. py:attribute:: hkl
      :value: None



   .. py:attribute:: incoherentOption
      :value: 'Coherent'



   .. py:attribute:: labframe
      :value: None



   .. py:attribute:: labframe_w
      :value: None



   .. py:attribute:: material


   .. py:attribute:: phaseShift
      :value: 0.0



   .. py:attribute:: thickness
      :value: 0.0



   .. py:attribute:: thicknessUnit
      :value: 'nm'



